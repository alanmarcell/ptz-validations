{"version":3,"sources":["../dist-esnext/generateId.js"],"names":["P","generateIdWith","curry","genId","propName","o","isNotNilOrEmpty","_id","id","assoc","generateId","generate"],"mappings":";;;;;;;AAAA;;IAAYA,C;;AACZ;;;;AACA;;;;;;;;;;AACA;;;AAGO,IAAMC,0CAAiB,gBAAEC,KAAF,CAAQ,UAACC,KAAD,EAAQC,QAAR,EAAkBC,CAAlB,EAAwB;AAC1D,QAAI,CAACA,CAAL,EACI,2BAAUD,QAAV,EAAqBD,OAArB;AACJ,QAAIH,EAAEM,eAAF,CAAkBD,EAAED,QAAF,CAAlB,CAAJ,EACI,OAAOC,CAAP;AACJ,QAAME,MAAMF,EAAE,MAAMD,QAAR,CAAZ,CAL0D,CAK3B;AAC/B,QAAMI,KAAKR,EAAEM,eAAF,CAAkBC,GAAlB,IAAyBA,GAAzB,GAA+BJ,OAA1C;AACA,WAAO,gBAAEM,KAAF,CAAQL,QAAR,EAAkBI,EAAlB,EAAsBH,CAAtB,CAAP;AACH,CAR6B,CAAvB;AASP;;;AAGO,IAAMK,kCAAaT,eAAe,kBAAQU,QAAvB,CAAnB;AACP","file":"generateId.js","sourcesContent":["import * as P from 'ptz-fp';\nimport R from 'ramda';\nimport shortid from 'shortid';\n/**\n * Generate Id with custom function.\n */\nexport const generateIdWith = R.curry((genId, propName, o) => {\n    if (!o)\n        return { [propName]: genId() };\n    if (P.isNotNilOrEmpty(o[propName]))\n        return o;\n    const _id = o['_' + propName]; // tslint:disable-line:variable-name\n    const id = P.isNotNilOrEmpty(_id) ? _id : genId();\n    return R.assoc(propName, id, o);\n});\n/**\n * Generate Id if .id and ._id are null or undefined.\n */\nexport const generateId = generateIdWith(shortid.generate);\n//# sourceMappingURL=generateId.js.map"]}