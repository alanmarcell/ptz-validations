{"version":3,"sources":["../dist-es6/HaveValidationExtends.test.js"],"names":["User","args","validate","validations","userName","email","displayName","required","toLowerCase","minLength","maxLength","describe","it","userArgs","user","errors","error","propName","errorMsg","INVALID_EMAIL"],"mappings":";;AAAA;;AACA;;;;;;;;IACMA,I;;;AACF,kBAAYC,IAAZ,EAAkB;AAAA;;AAAA,gHACRA,IADQ;;AAEdA,eAAO,MAAKC,QAAL,CAAcF,KAAKG,WAAnB,EAAgCF,IAAhC,CAAP;AACA,cAAKG,QAAL,GAAgBH,KAAKG,QAArB;AACA,cAAKC,KAAL,GAAaJ,KAAKI,KAAlB;AACA,cAAKC,WAAL,GAAmBL,KAAKK,WAAxB;AALc;AAMjB;;;;;AAELN,KAAKG,WAAL,GAAmB;AACfC,cAAU,2BAAe;AACrBG,kBAAU,IADW;AAErBC,qBAAa,IAFQ;AAGrBC,mBAAW,CAHU;AAIrBC,mBAAW;AAJU,KAAf,CADK;AAOfL,WAAO,0BAAc;AACjBE,kBAAU;AADO,KAAd,CAPQ;AAUfD,iBAAa,2BAAe;AACxBI,mBAAW,GADa;AAExBD,mBAAW,CAFa;AAGxBF,kBAAU;AAHc,KAAf;AAVE,CAAnB;AAgBAI,SAAS,wBAAT,EAAmC,YAAM;AACrCA,aAAS,oBAAT,EAA+B,YAAM;AACjCC,WAAG,wBAAH,EAA6B,YAAM;AAC/B,gBAAMC,WAAW;AACbP,6BAAa,cADA;AAEbD,uBAAO,uBAFM;AAGbD,0BAAU;AAHG,aAAjB;AAKA,gBAAMU,OAAO,IAAId,IAAJ,CAASa,QAAT,CAAb;AACA,kCAAMC,KAAKR,WAAX,EAAwBO,SAASP,WAAjC;AACA,kCAAMQ,KAAKT,KAAX,EAAkB,uBAAlB;AACA,kCAAMS,KAAKV,QAAX,EAAqB,aAArB;AACH,SAVD;AAWAQ,WAAG,yBAAH,EAA8B,YAAM;AAChC,gBAAMC,WAAW;AACbP,6BAAa,cADA;AAEbD,uBAAO,uBAFM;AAGbD,0BAAU;AAHG,aAAjB;AAKA,gBAAMU,OAAO,IAAId,IAAJ,CAASa,QAAT,CAAb;AACA,yCAAaC,KAAKC,MAAlB,EAA0B,UAACC,KAAD;AAAA,uBAAWA,MAAMC,QAAN,KAAmB,OAAnB,IAC9BD,MAAME,QAAN,KAAmB,iBAAUC,aADV;AAAA,aAA1B;AAEH,SATD;AAUH,KAtBD;AAuBH,CAxBD;AAyBA","file":"HaveValidationExtends.test.js","sourcesContent":["import { containsFind, equal } from 'ptz-assert';\nimport { allErrors, HaveValidation, validateEmail, validateString } from './index';\nclass User extends HaveValidation {\n    constructor(args) {\n        super(args);\n        args = this.validate(User.validations, args);\n        this.userName = args.userName;\n        this.email = args.email;\n        this.displayName = args.displayName;\n    }\n}\nUser.validations = {\n    userName: validateString({\n        required: true,\n        toLowerCase: true,\n        minLength: 3,\n        maxLength: 50\n    }),\n    email: validateEmail({\n        required: true\n    }),\n    displayName: validateString({\n        maxLength: 140,\n        minLength: 2,\n        required: true\n    })\n};\ndescribe('extends HaveValidation', () => {\n    describe('User class example', () => {\n        it('creates new valid user', () => {\n            const userArgs = {\n                displayName: 'Angelo Ocana',\n                email: 'AngeloOcana@Gmail.Com',\n                userName: 'AngeloOcana'\n            };\n            const user = new User(userArgs);\n            equal(user.displayName, userArgs.displayName);\n            equal(user.email, 'angeloocana@gmail.com');\n            equal(user.userName, 'angeloocana');\n        });\n        it('add error invalid email', () => {\n            const userArgs = {\n                displayName: 'Angelo Ocana',\n                email: 'AngeloOcana_Gmail_Com',\n                userName: 'AngeloOcana'\n            };\n            const user = new User(userArgs);\n            containsFind(user.errors, (error) => error.propName === 'email'\n                && error.errorMsg === allErrors.INVALID_EMAIL);\n        });\n    });\n});\n//# sourceMappingURL=HaveValidationExtends.test.js.map"]}