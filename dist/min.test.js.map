{"version":3,"sources":["../dist-esnext/min.test.js"],"names":["assert","V","describe","propName","error","errorMsg","allErrors","MIN","it","objToValidate","validatedObj","min","notOk","containsError","errors","undefined","ok","Date"],"mappings":"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","file":"min.test.js","sourcesContent":["import * as assert from 'ptz-assert';\nimport * as V from './index';\ndescribe('min', () => {\n    const propName = 'age';\n    const error = { propName, errorMsg: V.allErrors.MIN };\n    it('null', () => {\n        const objToValidate = {\n            [propName]: null\n        };\n        const validatedObj = V.min(3, propName, objToValidate);\n        assert.notOk(V.containsError(error, validatedObj.errors));\n    });\n    it('undefined', () => {\n        const objToValidate = {\n            [propName]: undefined\n        };\n        const validatedObj = V.min(3, propName, objToValidate);\n        assert.notOk(V.containsError(error, validatedObj.errors));\n    });\n    it('> string', () => {\n        const objToValidate = {\n            [propName]: 'a'\n        };\n        const validatedObj = V.min(3, propName, objToValidate);\n        assert.ok(V.containsError(error, validatedObj.errors));\n    });\n    it('< string', () => {\n        const objToValidate = {\n            [propName]: 'angeloocana'\n        };\n        const validatedObj = V.min(3, propName, objToValidate);\n        assert.notOk(V.containsError(error, validatedObj.errors));\n    });\n    it('= string', () => {\n        const objToValidate = {\n            [propName]: 'ang'\n        };\n        const validatedObj = V.min(3, propName, objToValidate);\n        assert.notOk(V.containsError(error, validatedObj.errors));\n    });\n    it('> array', () => {\n        const objToValidate = {\n            [propName]: [1]\n        };\n        const validatedObj = V.min(3, propName, objToValidate);\n        assert.ok(V.containsError(error, validatedObj.errors));\n    });\n    it('< array', () => {\n        const objToValidate = {\n            [propName]: [1, 2, 3, 4, 5]\n        };\n        const validatedObj = V.min(3, propName, objToValidate);\n        assert.notOk(V.containsError(error, validatedObj.errors));\n    });\n    it('= array', () => {\n        const objToValidate = {\n            [propName]: [1, 2, 3]\n        };\n        const validatedObj = V.min(3, propName, objToValidate);\n        assert.notOk(V.containsError(error, validatedObj.errors));\n    });\n    it('> date', () => {\n        const objToValidate = {\n            [propName]: new Date('2017-06-01')\n        };\n        const validatedObj = V.min(new Date('2017-06-02'), propName, objToValidate);\n        assert.ok(V.containsError(error, validatedObj.errors));\n    });\n    it('< date', () => {\n        const objToValidate = {\n            [propName]: new Date('2017-06-02')\n        };\n        const validatedObj = V.min(new Date('2017-06-01'), propName, objToValidate);\n        assert.notOk(V.containsError(error, validatedObj.errors));\n    });\n    it('= date', () => {\n        const objToValidate = {\n            [propName]: new Date('1992-06-28')\n        };\n        const validatedObj = V.min(new Date('1992-06-28'), propName, objToValidate);\n        assert.notOk(V.containsError(error, validatedObj.errors));\n    });\n    it('> number', () => {\n        const objToValidate = {\n            [propName]: 1\n        };\n        const validatedObj = V.min(2, propName, objToValidate);\n        assert.ok(V.containsError(error, validatedObj.errors));\n    });\n    it('< number', () => {\n        const objToValidate = {\n            [propName]: 2\n        };\n        const validatedObj = V.min(1, propName, objToValidate);\n        assert.notOk(V.containsError(error, validatedObj.errors));\n    });\n    it('= number', () => {\n        const objToValidate = {\n            [propName]: 1\n        };\n        const validatedObj = V.min(1, propName, objToValidate);\n        assert.notOk(V.containsError(error, validatedObj.errors));\n    });\n});\n//# sourceMappingURL=min.test.js.map"]}