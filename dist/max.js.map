{"version":3,"sources":["../dist-esnext/max.js"],"names":["maxWithError","curry","errorMsg","maxValue","propName","obj","propValue","prop","isNil","length","max","MAX"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;AAGO,IAAMA,sCAAe,gBAAEC,KAAF,CAAQ,UAACC,QAAD,EAAWC,QAAX,EAAqBC,QAArB,EAA+BC,GAA/B,EAAuC;AACvE,QAAMC,YAAY,gBAAEC,IAAF,CAAOH,QAAP,EAAiBC,GAAjB,CAAlB;AACA,QAAI,gBAAEG,KAAF,CAAQF,SAAR,CAAJ,EACI,OAAOD,GAAP;AACJ;AACA,QAAIF,YAAYG,UAAU,QAAV,IAAsBA,UAAUG,MAAhC,GAAyCH,SAArD,CAAJ,EACI,OAAO,qBAASD,GAAT,EAAcD,QAAd,EAAwBF,QAAxB,CAAP;AACJ,WAAOG,GAAP;AACH,CAR2B,CAArB;AASA,IAAMK,oBAAMV,aAAa,oBAAUW,GAAvB,CAAZ;AACP","file":"max.js","sourcesContent":["import R from 'ramda';\nimport allErrors from './allErrors';\nimport { addError } from './error';\n/**\n * Adds error if prop is grather than maxValue.\n */\nexport const maxWithError = R.curry((errorMsg, maxValue, propName, obj) => {\n    const propValue = R.prop(propName, obj);\n    if (R.isNil(propValue))\n        return obj;\n    // tslint:disable-next-line:no-string-literal\n    if (maxValue < (propValue['length'] ? propValue.length : propValue))\n        return addError(obj, propName, errorMsg);\n    return obj;\n});\nexport const max = maxWithError(allErrors.MAX);\n//# sourceMappingURL=max.js.map"]}