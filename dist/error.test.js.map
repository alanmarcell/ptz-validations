{"version":3,"sources":["../dist-esnext/error.test.js"],"names":["assert","V","describe","it","a","propName","errorMsg","b","ok","sameError","notOk","error","errors","containsError","newObj","addError","obj","equal","notEqual"],"mappings":"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","file":"error.test.js","sourcesContent":["import * as assert from 'ptz-assert';\nimport * as V from './index';\ndescribe('error', () => {\n    describe('sameError', () => {\n        it('equal', () => {\n            const a = { propName: 'username', errorMsg: 'REQUIRED' };\n            const b = { propName: 'username', errorMsg: 'REQUIRED' };\n            assert.ok(V.sameError(a, b));\n        });\n        it('same propName and different errorMsg', () => {\n            const a = { propName: 'username', errorMsg: 'REQUIRED' };\n            const b = { propName: 'username', errorMsg: 'MAX_LENGTH' };\n            assert.notOk(V.sameError(a, b));\n        });\n        it('different propName and same errorMsg', () => {\n            const a = { propName: 'email', errorMsg: 'REQUIRED' };\n            const b = { propName: 'username', errorMsg: 'REQUIRED' };\n            assert.notOk(V.sameError(a, b));\n        });\n        it('NOT equal', () => {\n            const a = { propName: 'email', errorMsg: 'REQUIRED' };\n            const b = { propName: 'username', errorMsg: 'MAX_LENGTH' };\n            assert.notOk(V.sameError(a, b));\n        });\n    });\n    describe('containsError', () => {\n        it('contains', () => {\n            const error = { propName: 'username', errorMsg: 'REQUIRED' };\n            const errors = [{ propName: 'username', errorMsg: 'REQUIRED' }];\n            assert.ok(V.containsError(error, errors));\n        });\n        it('NOT contains', () => {\n            const error = { propName: 'username', errorMsg: 'REQUIRED' };\n            const errors = [];\n            assert.notOk(V.containsError(error, errors));\n        });\n    });\n    describe('addError', () => {\n        it('return new obj when null obj', () => {\n            const error = { propName: 'username', errorMsg: 'REQUIRED' };\n            const newObj = V.addError(null, error.propName, error.errorMsg);\n            assert.ok(V.containsError(error, newObj.errors));\n        });\n        it('return new obj with error when errors is null', () => {\n            const error = { propName: 'username', errorMsg: 'REQUIRED' };\n            const obj = { errors: null };\n            const newObj = V.addError(obj, error.propName, error.errorMsg);\n            assert.ok(V.containsError(error, newObj.errors));\n        });\n        it('return new obj with error when errors is empty', () => {\n            const error = { propName: 'username', errorMsg: 'REQUIRED' };\n            const obj = { errors: [] };\n            const newObj = V.addError(obj, error.propName, error.errorMsg);\n            assert.ok(V.containsError(error, newObj.errors));\n        });\n        it('return obj when contains error', () => {\n            const error = { propName: 'username', errorMsg: 'REQUIRED' };\n            const obj = { errors: [error] };\n            const newObj = V.addError(obj, error.propName, error.errorMsg);\n            assert.equal(newObj, obj);\n        });\n        it('return new obj and concat error', () => {\n            const error = { propName: 'username', errorMsg: 'REQUIRED' };\n            const obj = {};\n            const newObj = V.addError(obj, error.propName, error.errorMsg);\n            assert.notEqual(newObj, obj);\n            assert.ok(V.containsError(error, newObj.errors));\n        });\n    });\n});\n//# sourceMappingURL=error.test.js.map"]}