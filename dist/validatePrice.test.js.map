{"version":3,"sources":["../dist-esnext/validatePrice.test.js"],"names":["assert","V","describe","it","propName","propValidation","required","objToValidate","validatedObj","validatePrice","error","errorMsg","allErrors","INVALID_NUMBER_ERROR","ok","containsError","errors","requiredError","REQUIRED","undefined","notOk","canBeZero","MIN_LENGTH","cannotBeZeroError","CANNOT_BE_ZERO","canBeNegative","CANNOT_BE_NEGATIVE","cannotBeNegativeError"],"mappings":"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","file":"validatePrice.test.js","sourcesContent":["import * as assert from 'ptz-assert';\nimport * as V from './index';\ndescribe('validatePrice', () => {\n    describe('invalidNumber', () => {\n        it('add default invalidNumber error when is not a number', () => {\n            const propName = 'price';\n            const propValidation = {\n                required: true\n            };\n            const objToValidate = {\n                [propName]: 'notanumber'\n            };\n            const validatedObj = V.validatePrice(propValidation, propName, objToValidate);\n            const error = { propName, errorMsg: V.allErrors.INVALID_NUMBER_ERROR };\n            assert.ok(V.containsError(error, validatedObj.errors));\n        });\n        it('add custom invalidNumber error msg when is not a number', () => {\n            const propName = 'price';\n            const propValidation = {\n                required: true,\n                requiredError: 'CUSTOM_ERROR_MSG'\n            };\n            const objToValidate = {\n                [propName]: null\n            };\n            const error = { propName, errorMsg: propValidation.requiredError };\n            const validatedObj = V.validatePrice(propValidation, propName, objToValidate);\n            assert.ok(V.containsError(error, validatedObj.errors));\n        });\n    });\n    describe('required', () => {\n        describe('null', () => {\n            it('add default error msg when null', () => {\n                const propName = 'price';\n                const propValidation = {\n                    required: true\n                };\n                const objToValidate = {\n                    [propName]: null\n                };\n                const validatedObj = V.validatePrice(propValidation, propName, objToValidate);\n                const error = { propName, errorMsg: V.allErrors.REQUIRED };\n                assert.ok(V.containsError(error, validatedObj.errors));\n            });\n            it('add custom error msg when null', () => {\n                const propName = 'price';\n                const propValidation = {\n                    required: true,\n                    requiredError: 'CUSTOM_ERROR_MSG'\n                };\n                const objToValidate = {\n                    [propName]: null\n                };\n                const error = { propName, errorMsg: propValidation.requiredError };\n                const validatedObj = V.validatePrice(propValidation, propName, objToValidate);\n                assert.ok(V.containsError(error, validatedObj.errors));\n            });\n        });\n        describe('undefined', () => {\n            it('add default error msg when undefined', () => {\n                const propName = 'price';\n                const propValidation = {\n                    required: true\n                };\n                const objToValidate = {\n                    [propName]: undefined\n                };\n                const validatedObj = V.validatePrice(propValidation, propName, objToValidate);\n                const error = { propName, errorMsg: V.allErrors.REQUIRED };\n                assert.ok(V.containsError(error, validatedObj.errors));\n            });\n            it('add custom error msg when undefined', () => {\n                const propName = 'price';\n                const propValidation = {\n                    required: true,\n                    requiredError: 'CUSTOM_ERROR_MSG'\n                };\n                const objToValidate = {\n                    [propName]: undefined\n                };\n                const error = { propName, errorMsg: propValidation.requiredError };\n                const validatedObj = V.validatePrice(propValidation, propName, objToValidate);\n                assert.ok(V.containsError(error, validatedObj.errors));\n            });\n        });\n        describe('empty', () => {\n            it('add default error msg when null', () => {\n                const propName = 'price';\n                const propValidation = {\n                    required: true\n                };\n                const objToValidate = {\n                    [propName]: ''\n                };\n                const validatedObj = V.validatePrice(propValidation, propName, objToValidate);\n                const error = { propName, errorMsg: V.allErrors.REQUIRED };\n                assert.ok(V.containsError(error, validatedObj.errors));\n            });\n            it('add custom error msg when null', () => {\n                const propName = 'price';\n                const propValidation = {\n                    required: true,\n                    requiredError: 'CUSTOM_ERROR_MSG'\n                };\n                const objToValidate = {\n                    [propName]: ''\n                };\n                const error = { propName, errorMsg: propValidation.requiredError };\n                const validatedObj = V.validatePrice(propValidation, propName, objToValidate);\n                assert.ok(V.containsError(error, validatedObj.errors));\n            });\n        });\n        it('do NOT add error when not empty', () => {\n            const propName = 'price';\n            const propValidation = {\n                required: true\n            };\n            const objToValidate = {\n                [propName]: 10\n            };\n            const validatedObj = V.validatePrice(propValidation, propName, objToValidate);\n            const error = { propName, errorMsg: V.allErrors.REQUIRED };\n            assert.notOk(V.containsError(error, validatedObj.errors));\n        });\n    });\n    describe('canBeZero', () => {\n        it('add default cannotBeZero error when equals zero', () => {\n            const propName = 'price';\n            const propValidation = {\n                canBeZero: false\n            };\n            const objToValidate = {\n                [propName]: 0\n            };\n            const validatedObj = V.validatePrice(propValidation, propName, objToValidate);\n            const error = { propName, errorMsg: V.allErrors.MIN_LENGTH };\n            assert.notOk(V.containsError(error, validatedObj.errors));\n        });\n        it('add custom cannotBeZero error when equals zero', () => {\n            const propName = 'price';\n            const propValidation = {\n                canBeZero: false,\n                cannotBeZeroError: 'CUSTOM_CANNOT_BE_ZERO_ERROR'\n            };\n            const objToValidate = {\n                [propName]: 0\n            };\n            const validatedObj = V.validatePrice(propValidation, propName, objToValidate);\n            const error = { propName, errorMsg: propValidation.cannotBeZeroError };\n            assert.ok(V.containsError(error, validatedObj.errors));\n        });\n        it('do NOT add cannotBeZero error when price is above ZERO', () => {\n            const propName = 'price';\n            const propValidation = {\n                canBeZero: false\n            };\n            const objToValidate = {\n                [propName]: 1\n            };\n            const validatedObj = V.validatePrice(propValidation, propName, objToValidate);\n            const error = { propName, errorMsg: V.allErrors.CANNOT_BE_ZERO };\n            assert.notOk(V.containsError(error, validatedObj.errors));\n        });\n        it('do NOT add cannotBeZero error if price can be ZERO ', () => {\n            const propName = 'price';\n            const propValidation = {\n                canBeZero: true\n            };\n            const objToValidate = {\n                [propName]: 0\n            };\n            const validatedObj = V.validatePrice(propValidation, propName, objToValidate);\n            const error = { propName, errorMsg: V.allErrors.CANNOT_BE_ZERO };\n            assert.notOk(V.containsError(error, validatedObj.errors));\n        });\n    });\n    describe('canBeNegative', () => {\n        it('add default cannotBeNegative error when price is negative', () => {\n            const propName = 'price';\n            const propValidation = {\n                canBeNegative: false\n            };\n            const objToValidate = {\n                [propName]: -1\n            };\n            const validatedObj = V.validatePrice(propValidation, propName, objToValidate);\n            const error = { propName, errorMsg: V.allErrors.CANNOT_BE_NEGATIVE };\n            assert.ok(V.containsError(error, validatedObj.errors));\n        });\n        it('add custom cannotBeNegative error when price is negative', () => {\n            const propName = 'price';\n            const propValidation = {\n                canBeNegative: false,\n                cannotBeNegativeError: 'CUSTOM_CANNOT_BE_NEGATIVE_ERROR'\n            };\n            const objToValidate = {\n                [propName]: -1\n            };\n            const validatedObj = V.validatePrice(propValidation, propName, objToValidate);\n            const error = { propName, errorMsg: propValidation.cannotBeNegativeError };\n            assert.ok(V.containsError(error, validatedObj.errors));\n        });\n        it('do NOT add cannotBeNegative error when price is positive', () => {\n            const propName = 'price';\n            const propValidation = {\n                canBeNegative: false\n            };\n            const objToValidate = {\n                [propName]: 1\n            };\n            const validatedObj = V.validatePrice(propValidation, propName, objToValidate);\n            const error = { propName, errorMsg: V.allErrors.CANNOT_BE_NEGATIVE };\n            assert.notOk(V.containsError(error, validatedObj.errors));\n        });\n        it('do NOT add cannotBeNegative error when price is zero', () => {\n            const propName = 'price';\n            const propValidation = {\n                canBeNegative: false\n            };\n            const objToValidate = {\n                [propName]: 0\n            };\n            const validatedObj = V.validatePrice(propValidation, propName, objToValidate);\n            const error = { propName, errorMsg: V.allErrors.CANNOT_BE_NEGATIVE };\n            assert.notOk(V.containsError(error, validatedObj.errors));\n        });\n        it('do NOT add cannotBeNegative error when price can be negative', () => {\n            const propName = 'price';\n            const propValidation = {\n                canBeNegative: true\n            };\n            const objToValidate = {\n                [propName]: -10\n            };\n            const validatedObj = V.validatePrice(propValidation, propName, objToValidate);\n            const error = { propName, errorMsg: V.allErrors.CANNOT_BE_NEGATIVE };\n            assert.notOk(V.containsError(error, validatedObj.errors));\n        });\n    });\n});\n//# sourceMappingURL=validatePrice.test.js.map"]}