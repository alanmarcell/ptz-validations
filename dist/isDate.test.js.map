{"version":3,"sources":["../dist-esnext/isDate.test.js"],"names":["assert","V","describe","propName","error","errorMsg","allErrors","INVALID_DATE_ERROR","it","objToValidate","validatedObj","isDate","notOk","containsError","errors","console","log","ok","Date","undefined"],"mappings":";;AAAA;;IAAYA,M;;AACZ;;IAAYC,C;;;;;;AACZC,SAAS,QAAT,EAAmB,YAAM;AACrB,QAAMC,WAAW,KAAjB;AACA,QAAMC,QAAQ,EAAED,kBAAF,EAAYE,UAAUJ,EAAEK,SAAF,CAAYC,kBAAlC,EAAd;AACAC,OAAG,aAAH,EAAkB,YAAM;AACpB,YAAMC,oCAAmBN,QAAnB,EAA8B,YAA9B,CAAN;AACA,YAAMO,eAAeT,EAAEU,MAAF,CAASR,QAAT,EAAmBM,aAAnB,CAArB;AACAT,eAAOY,KAAP,CAAaX,EAAEY,aAAF,CAAgBT,KAAhB,EAAuBM,aAAaI,MAApC,CAAb;AACH,KAJD;AAKAN,OAAG,QAAH,EAAa,YAAM;AACf,YAAMC,oCAAmBN,QAAnB,EAA8B,KAA9B,CAAN;AACA,YAAMO,eAAeT,EAAEU,MAAF,CAASR,QAAT,EAAmBM,aAAnB,CAArB;AACAM,gBAAQC,GAAR,CAAY,cAAZ,EAA4BN,YAA5B;AACAK,gBAAQC,GAAR,CAAY,OAAZ,EAAqBZ,KAArB;AACAJ,eAAOiB,EAAP,CAAUhB,EAAEY,aAAF,CAAgBT,KAAhB,EAAuBM,aAAaI,MAApC,CAAV;AACH,KAND;AAOAN,OAAG,QAAH,EAAa,YAAM;AACf,YAAMC,oCAAmBN,QAAnB,EAA8B,EAA9B,CAAN;AACA,YAAMO,eAAeT,EAAEU,MAAF,CAASR,QAAT,EAAmBM,aAAnB,CAArB;AACAT,eAAOiB,EAAP,CAAUhB,EAAEY,aAAF,CAAgBT,KAAhB,EAAuBM,aAAaI,MAApC,CAAV;AACH,KAJD;AAKAN,OAAG,MAAH,EAAW,YAAM;AACb,YAAMC,oCAAmBN,QAAnB,EAA8B,IAAIe,IAAJ,EAA9B,CAAN;AACA,YAAMR,eAAeT,EAAEU,MAAF,CAASR,QAAT,EAAmBM,aAAnB,CAArB;AACAT,eAAOY,KAAP,CAAaX,EAAEY,aAAF,CAAgBT,KAAhB,EAAuBM,aAAaI,MAApC,CAAb;AACH,KAJD;AAKAN,OAAG,OAAH,EAAY,YAAM;AACd,YAAMC,oCAAmBN,QAAnB,EAA8B,CAAC,KAAD,CAA9B,CAAN;AACA,YAAMO,eAAeT,EAAEU,MAAF,CAASR,QAAT,EAAmBM,aAAnB,CAArB;AACAT,eAAOiB,EAAP,CAAUhB,EAAEY,aAAF,CAAgBT,KAAhB,EAAuBM,aAAaI,MAApC,CAAV;AACH,KAJD;AAKAN,OAAG,MAAH,EAAW,YAAM;AACb,YAAMC,oCAAmBN,QAAnB,EAA8B,IAA9B,CAAN;AACA,YAAMO,eAAeT,EAAEU,MAAF,CAASR,QAAT,EAAmBM,aAAnB,CAArB;AACAT,eAAOY,KAAP,CAAaX,EAAEY,aAAF,CAAgBT,KAAhB,EAAuBM,aAAaI,MAApC,CAAb;AACH,KAJD;AAKAN,OAAG,WAAH,EAAgB,YAAM;AAClB,YAAMC,oCAAmBN,QAAnB,EAA8BgB,SAA9B,CAAN;AACA,YAAMT,eAAeT,EAAEU,MAAF,CAASR,QAAT,EAAmBM,aAAnB,CAArB;AACAT,eAAOY,KAAP,CAAaX,EAAEY,aAAF,CAAgBT,KAAhB,EAAuBM,aAAaI,MAApC,CAAb;AACH,KAJD;AAKH,CAxCD;AAyCA","file":"isDate.test.js","sourcesContent":["import * as assert from 'ptz-assert';\nimport * as V from './index';\ndescribe('isDate', () => {\n    const propName = 'age';\n    const error = { propName, errorMsg: V.allErrors.INVALID_DATE_ERROR };\n    it('string date', () => {\n        const objToValidate = { [propName]: '1992-06-28' };\n        const validatedObj = V.isDate(propName, objToValidate);\n        assert.notOk(V.containsError(error, validatedObj.errors));\n    });\n    it('string', () => {\n        const objToValidate = { [propName]: 'abc' };\n        const validatedObj = V.isDate(propName, objToValidate);\n        console.log('validatedObj', validatedObj);\n        console.log('error', error);\n        assert.ok(V.containsError(error, validatedObj.errors));\n    });\n    it('number', () => {\n        const objToValidate = { [propName]: 25 };\n        const validatedObj = V.isDate(propName, objToValidate);\n        assert.ok(V.containsError(error, validatedObj.errors));\n    });\n    it('date', () => {\n        const objToValidate = { [propName]: new Date() };\n        const validatedObj = V.isDate(propName, objToValidate);\n        assert.notOk(V.containsError(error, validatedObj.errors));\n    });\n    it('array', () => {\n        const objToValidate = { [propName]: ['abc'] };\n        const validatedObj = V.isDate(propName, objToValidate);\n        assert.ok(V.containsError(error, validatedObj.errors));\n    });\n    it('null', () => {\n        const objToValidate = { [propName]: null };\n        const validatedObj = V.isDate(propName, objToValidate);\n        assert.notOk(V.containsError(error, validatedObj.errors));\n    });\n    it('undefined', () => {\n        const objToValidate = { [propName]: undefined };\n        const validatedObj = V.isDate(propName, objToValidate);\n        assert.notOk(V.containsError(error, validatedObj.errors));\n    });\n});\n//# sourceMappingURL=isDate.test.js.map"]}