{"version":3,"sources":["../dist-esnext/isValid.test.js"],"names":["assert","V","describe","it","entity","errors","ok","isValid","errorMsg","notOk"],"mappings":";;AAAA;;IAAYA,M;;AACZ;;IAAYC,C;;;;AACZC,SAAS,SAAT,EAAoB,YAAM;AACtBC,OAAG,wCAAH,EAA6C,YAAM;AAC/C,YAAMC,SAAS,EAAEC,QAAQ,IAAV,EAAf;AACAL,eAAOM,EAAP,CAAUL,EAAEM,OAAF,CAAUH,MAAV,CAAV;AACH,KAHD;AAIAD,OAAG,wCAAH,EAA6C,YAAM;AAC/C,YAAMC,SAAS,EAAEC,QAAQ,EAAV,EAAf;AACAL,eAAOM,EAAP,CAAUL,EAAEM,OAAF,CAAUH,MAAV,CAAV;AACH,KAHD;AAIAD,OAAG,2CAAH,EAAgD,YAAM;AAClD,YAAMC,SAAS,EAAEC,QAAQ,CAAC,EAAEG,UAAU,qBAAZ,EAAD,CAAV,EAAf;AACAR,eAAOS,KAAP,CAAaR,EAAEM,OAAF,CAAUH,MAAV,CAAb;AACH,KAHD;AAIH,CAbD;AAcA","file":"isValid.test.js","sourcesContent":["import * as assert from 'ptz-assert';\nimport * as V from './index';\ndescribe('isValid', () => {\n    it('should return true when errors is null', () => {\n        const entity = { errors: null };\n        assert.ok(V.isValid(entity));\n    });\n    it('should return true when error is empty', () => {\n        const entity = { errors: [] };\n        assert.ok(V.isValid(entity));\n    });\n    it('should return false when there are errors', () => {\n        const entity = { errors: [{ errorMsg: 'ERROR_ANOTHER_ERROR' }] };\n        assert.notOk(V.isValid(entity));\n    });\n});\n//# sourceMappingURL=isValid.test.js.map"]}