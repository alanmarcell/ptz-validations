{"version":3,"sources":["../dist-esnext/isNumber.js"],"names":["isNumberWithError","curry","errorMsg","propName","obj","propValue","prop","isNil","numPropValue","parseFloat","isNaN","assoc","isNumber","INVALID_NUMBER_ERROR"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;AAGO,IAAMA,gDAAoB,gBAAEC,KAAF,CAAQ,UAACC,QAAD,EAAWC,QAAX,EAAqBC,GAArB,EAA6B;AAClE,QAAMC,YAAY,gBAAEC,IAAF,CAAOH,QAAP,EAAiBC,GAAjB,CAAlB;AACA,QAAI,gBAAEG,KAAF,CAAQF,SAAR,KAAsB,OAAOA,SAAP,KAAqB,QAA/C,EACI,OAAOD,GAAP;AACJ,QAAI,OAAOC,SAAP,KAAqB,QAAzB,EACI,OAAO,qBAASD,GAAT,EAAcD,QAAd,EAAwBD,QAAxB,CAAP;AACJ,QAAMM,eAAeC,WAAWJ,SAAX,CAArB;AACA,WAAOK,MAAMF,YAAN,IACD,qBAASJ,GAAT,EAAcD,QAAd,EAAwBD,QAAxB,CADC,GAED,gBAAES,KAAF,CAAQR,QAAR,EAAkBK,YAAlB,EAAgCJ,GAAhC,CAFN;AAGH,CAVgC,CAA1B;AAWP;;;AAGO,IAAMQ,8BAAWZ,kBAAkB,oBAAUa,oBAA5B,CAAjB;AACP","file":"isNumber.js","sourcesContent":["import R from 'ramda';\nimport allErrors from './allErrors';\nimport { addError } from './error';\n/**\n * Validate Number.\n */\nexport const isNumberWithError = R.curry((errorMsg, propName, obj) => {\n    const propValue = R.prop(propName, obj);\n    if (R.isNil(propValue) || typeof propValue === 'number')\n        return obj;\n    if (typeof propValue !== 'string')\n        return addError(obj, propName, errorMsg);\n    const numPropValue = parseFloat(propValue);\n    return isNaN(numPropValue)\n        ? addError(obj, propName, errorMsg)\n        : R.assoc(propName, numPropValue, obj);\n});\n/**\n * Validate Number.\n */\nexport const isNumber = isNumberWithError(allErrors.INVALID_NUMBER_ERROR);\n//# sourceMappingURL=isNumber.js.map"]}