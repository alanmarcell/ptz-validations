{"version":3,"sources":["../dist-esnext/validateNumber.test.js"],"names":["assert","V","describe","it","propName","propValidation","required","objToValidate","validatedObj","validateNumber","error","errorMsg","allErrors","REQUIRED","ok","containsError","errors","requiredError","undefined","notOk","min","MIN_LENGTH","minError","max","MAX_LENGTH","maxError"],"mappings":"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","file":"validateNumber.test.js","sourcesContent":["import * as assert from 'ptz-assert';\nimport * as V from './index';\ndescribe('validateNumber', () => {\n    describe('required', () => {\n        describe('null', () => {\n            it('add default error msg when null', () => {\n                const propName = 'age';\n                const propValidation = {\n                    required: true\n                };\n                const objToValidate = {\n                    [propName]: null\n                };\n                const validatedObj = V.validateNumber(propValidation, propName, objToValidate);\n                const error = { propName, errorMsg: V.allErrors.REQUIRED };\n                assert.ok(V.containsError(error, validatedObj.errors));\n            });\n            it('add custom error msg when null', () => {\n                const propName = 'age';\n                const propValidation = {\n                    required: true,\n                    requiredError: 'CUSTOM_ERROR_MSG'\n                };\n                const objToValidate = {\n                    [propName]: null\n                };\n                const error = { propName, errorMsg: propValidation.requiredError };\n                const validatedObj = V.validateNumber(propValidation, propName, objToValidate);\n                assert.ok(V.containsError(error, validatedObj.errors));\n            });\n        });\n        describe('undefined', () => {\n            it('add default error msg when undefined', () => {\n                const propName = 'age';\n                const propValidation = {\n                    required: true\n                };\n                const objToValidate = {\n                    [propName]: undefined\n                };\n                const validatedObj = V.validateNumber(propValidation, propName, objToValidate);\n                const error = { propName, errorMsg: V.allErrors.REQUIRED };\n                assert.ok(V.containsError(error, validatedObj.errors));\n            });\n            it('add custom error msg when undefined', () => {\n                const propName = 'age';\n                const propValidation = {\n                    required: true,\n                    requiredError: 'CUSTOM_ERROR_MSG'\n                };\n                const objToValidate = {\n                    [propName]: undefined\n                };\n                const error = { propName, errorMsg: propValidation.requiredError };\n                const validatedObj = V.validateNumber(propValidation, propName, objToValidate);\n                assert.ok(V.containsError(error, validatedObj.errors));\n            });\n        });\n        it('do NOT add error when not empty', () => {\n            const propName = 'age';\n            const propValidation = {\n                required: true\n            };\n            const objToValidate = {\n                [propName]: 25\n            };\n            const validatedObj = V.validateNumber(propValidation, propName, objToValidate);\n            const error = { propName, errorMsg: V.allErrors.REQUIRED };\n            assert.notOk(V.containsError(error, validatedObj.errors));\n        });\n    });\n    describe('min', () => {\n        it('add default min error when less than min', () => {\n            const propName = 'age';\n            const propValidation = {\n                min: 3\n            };\n            const objToValidate = {\n                [propName]: 4\n            };\n            const validatedObj = V.validateNumber(propValidation, propName, objToValidate);\n            const error = { propName, errorMsg: V.allErrors.MIN_LENGTH };\n            assert.notOk(V.containsError(error, validatedObj.errors));\n        });\n        it('add custom min error when less than min', () => {\n            const propName = 'age';\n            const propValidation = {\n                min: 3,\n                minError: 'CUSTOM_MIN_LENGTH_ERROR'\n            };\n            const objToValidate = {\n                [propName]: 1\n            };\n            const validatedObj = V.validateNumber(propValidation, propName, objToValidate);\n            const error = { propName, errorMsg: propValidation.minError };\n            assert.ok(V.containsError(error, validatedObj.errors));\n        });\n        it('do NOT add min error when equal than min', () => {\n            const propName = 'age';\n            const propValidation = {\n                min: 3\n            };\n            const objToValidate = {\n                [propName]: 3\n            };\n            const validatedObj = V.validateNumber(propValidation, propName, objToValidate);\n            const error = { propName, errorMsg: V.allErrors.MIN_LENGTH };\n            assert.notOk(V.containsError(error, validatedObj.errors));\n        });\n        it('do NOT add min error when grater than min', () => {\n            const propName = 'age';\n            const propValidation = {\n                min: 3\n            };\n            const objToValidate = {\n                [propName]: 4\n            };\n            const validatedObj = V.validateNumber(propValidation, propName, objToValidate);\n            const error = { propName, errorMsg: V.allErrors.MIN_LENGTH };\n            assert.notOk(V.containsError(error, validatedObj.errors));\n        });\n        it('do NOT add min error when null and not required', () => {\n            const propName = 'age';\n            const propValidation = {\n                required: false,\n                min: 3\n            };\n            const objToValidate = {\n                [propName]: null\n            };\n            const validatedObj = V.validateNumber(propValidation, propName, objToValidate);\n            const error = { propName, errorMsg: V.allErrors.MIN_LENGTH };\n            assert.notOk(V.containsError(error, validatedObj.errors));\n        });\n    });\n    describe('max', () => {\n        it('add default max error when grater than max', () => {\n            const propName = 'age';\n            const propValidation = {\n                max: 3\n            };\n            const objToValidate = {\n                [propName]: 4\n            };\n            const validatedObj = V.validateNumber(propValidation, propName, objToValidate);\n            const error = { propName, errorMsg: V.allErrors.MAX_LENGTH };\n            assert.ok(V.containsError(error, validatedObj.errors));\n        });\n        it('add custom max error when grater than max', () => {\n            const propName = 'age';\n            const propValidation = {\n                max: 3,\n                maxError: 'CUSTOM_MAX_LENGTH_ERROR'\n            };\n            const objToValidate = {\n                [propName]: 4\n            };\n            const validatedObj = V.validateNumber(propValidation, propName, objToValidate);\n            const error = { propName, errorMsg: propValidation.maxError };\n            assert.ok(V.containsError(error, validatedObj.errors));\n        });\n        it('do not add max error when equal than max', () => {\n            const propName = 'age';\n            const propValidation = {\n                max: 3\n            };\n            const objToValidate = {\n                [propName]: 3\n            };\n            const validatedObj = V.validateNumber(propValidation, propName, objToValidate);\n            const error = { propName, errorMsg: V.allErrors.MAX_LENGTH };\n            assert.notOk(V.containsError(error, validatedObj.errors));\n        });\n        it('do NOT add max error when less than max', () => {\n            const propName = 'age';\n            const propValidation = {\n                max: 3\n            };\n            const objToValidate = {\n                [propName]: 2\n            };\n            const validatedObj = V.validateNumber(propValidation, propName, objToValidate);\n            const error = { propName, errorMsg: V.allErrors.MAX_LENGTH };\n            assert.notOk(V.containsError(error, validatedObj.errors));\n        });\n        it('do NOT add max error when null and not required', () => {\n            const propName = 'age';\n            const propValidation = {\n                required: false,\n                max: 3\n            };\n            const objToValidate = {\n                [propName]: null\n            };\n            const validatedObj = V.validateNumber(propValidation, propName, objToValidate);\n            const error = { propName, errorMsg: V.allErrors.MAX_LENGTH };\n            assert.notOk(V.containsError(error, validatedObj.errors));\n        });\n    });\n});\n//# sourceMappingURL=validateNumber.test.js.map"]}