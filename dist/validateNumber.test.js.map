{"version":3,"sources":["../dist-esnext/validateNumber.test.js"],"names":["assert","V","describe","it","ok","isValidNumber","notOk","propName","propValidation","required","objToValidate","validatedObj","validateNumber","error","errorMsg","allErrors","REQUIRED","containsError","errors","requiredError","undefined","min","MIN_LENGTH","minError","max","MAX_LENGTH","maxError","age","INVALID_NUMBER_ERROR","invalidNumberError"],"mappings":"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","file":"validateNumber.test.js","sourcesContent":["import * as assert from 'ptz-assert';\nimport * as V from './index';\ndescribe('validateNumber', () => {\n    describe('isValidNumber', () => {\n        it('Valid Number', () => {\n            assert.ok(V.isValidNumber(10));\n        });\n        it('Invalid Number', () => {\n            assert.notOk(V.isValidNumber('10'));\n        });\n    });\n    describe('required', () => {\n        describe('null', () => {\n            it('add default error msg when null', () => {\n                const propName = 'age';\n                const propValidation = {\n                    required: true\n                };\n                const objToValidate = {\n                    [propName]: null\n                };\n                const validatedObj = V.validateNumber(propValidation, propName, objToValidate);\n                const error = { propName, errorMsg: V.allErrors.REQUIRED };\n                assert.ok(V.containsError(error, validatedObj.errors));\n            });\n            it('add custom error msg when null', () => {\n                const propName = 'age';\n                const propValidation = {\n                    required: true,\n                    requiredError: 'CUSTOM_ERROR_MSG'\n                };\n                const objToValidate = {\n                    [propName]: null\n                };\n                const error = { propName, errorMsg: propValidation.requiredError };\n                const validatedObj = V.validateNumber(propValidation, propName, objToValidate);\n                assert.ok(V.containsError(error, validatedObj.errors));\n            });\n        });\n        describe('undefined', () => {\n            it('add default error msg when undefined', () => {\n                const propName = 'age';\n                const propValidation = {\n                    required: true\n                };\n                const objToValidate = {\n                    [propName]: undefined\n                };\n                const validatedObj = V.validateNumber(propValidation, propName, objToValidate);\n                const error = { propName, errorMsg: V.allErrors.REQUIRED };\n                assert.ok(V.containsError(error, validatedObj.errors));\n            });\n            it('add custom error msg when undefined', () => {\n                const propName = 'age';\n                const propValidation = {\n                    required: true,\n                    requiredError: 'CUSTOM_ERROR_MSG'\n                };\n                const objToValidate = {\n                    [propName]: undefined\n                };\n                const error = { propName, errorMsg: propValidation.requiredError };\n                const validatedObj = V.validateNumber(propValidation, propName, objToValidate);\n                assert.ok(V.containsError(error, validatedObj.errors));\n            });\n        });\n        it('do NOT add error when not empty', () => {\n            const propName = 'age';\n            const propValidation = {\n                required: true\n            };\n            const objToValidate = {\n                [propName]: 25\n            };\n            const validatedObj = V.validateNumber(propValidation, propName, objToValidate);\n            const error = { propName, errorMsg: V.allErrors.REQUIRED };\n            assert.notOk(V.containsError(error, validatedObj.errors));\n        });\n    });\n    describe('min', () => {\n        it('add default min error when less than min', () => {\n            const propName = 'age';\n            const propValidation = {\n                min: 3\n            };\n            const objToValidate = {\n                [propName]: 4\n            };\n            const validatedObj = V.validateNumber(propValidation, propName, objToValidate);\n            const error = { propName, errorMsg: V.allErrors.MIN_LENGTH };\n            assert.notOk(V.containsError(error, validatedObj.errors));\n        });\n        it('add custom min error when less than min', () => {\n            const propName = 'age';\n            const propValidation = {\n                min: 3,\n                minError: 'CUSTOM_MIN_LENGTH_ERROR'\n            };\n            const objToValidate = {\n                [propName]: 1\n            };\n            const validatedObj = V.validateNumber(propValidation, propName, objToValidate);\n            const error = { propName, errorMsg: propValidation.minError };\n            assert.ok(V.containsError(error, validatedObj.errors));\n        });\n        it('do NOT add min error when equal than min', () => {\n            const propName = 'age';\n            const propValidation = {\n                min: 3\n            };\n            const objToValidate = {\n                [propName]: 3\n            };\n            const validatedObj = V.validateNumber(propValidation, propName, objToValidate);\n            const error = { propName, errorMsg: V.allErrors.MIN_LENGTH };\n            assert.notOk(V.containsError(error, validatedObj.errors));\n        });\n        it('do NOT add min error when grater than min', () => {\n            const propName = 'age';\n            const propValidation = {\n                min: 3\n            };\n            const objToValidate = {\n                [propName]: 4\n            };\n            const validatedObj = V.validateNumber(propValidation, propName, objToValidate);\n            const error = { propName, errorMsg: V.allErrors.MIN_LENGTH };\n            assert.notOk(V.containsError(error, validatedObj.errors));\n        });\n        it('do NOT add min error when null and not required', () => {\n            const propName = 'age';\n            const propValidation = {\n                required: false,\n                min: 3\n            };\n            const objToValidate = {\n                [propName]: null\n            };\n            const validatedObj = V.validateNumber(propValidation, propName, objToValidate);\n            const error = { propName, errorMsg: V.allErrors.MIN_LENGTH };\n            assert.notOk(V.containsError(error, validatedObj.errors));\n        });\n    });\n    describe('max', () => {\n        it('add default max error when grater than max', () => {\n            const propName = 'age';\n            const propValidation = {\n                max: 3\n            };\n            const objToValidate = {\n                [propName]: 4\n            };\n            const validatedObj = V.validateNumber(propValidation, propName, objToValidate);\n            const error = { propName, errorMsg: V.allErrors.MAX_LENGTH };\n            assert.ok(V.containsError(error, validatedObj.errors));\n        });\n        it('add custom max error when grater than max', () => {\n            const propName = 'age';\n            const propValidation = {\n                max: 3,\n                maxError: 'CUSTOM_MAX_LENGTH_ERROR'\n            };\n            const objToValidate = {\n                [propName]: 4\n            };\n            const validatedObj = V.validateNumber(propValidation, propName, objToValidate);\n            const error = { propName, errorMsg: propValidation.maxError };\n            assert.ok(V.containsError(error, validatedObj.errors));\n        });\n        it('do not add max error when equal than max', () => {\n            const propName = 'age';\n            const propValidation = {\n                max: 3\n            };\n            const objToValidate = {\n                [propName]: 3\n            };\n            const validatedObj = V.validateNumber(propValidation, propName, objToValidate);\n            const error = { propName, errorMsg: V.allErrors.MAX_LENGTH };\n            assert.notOk(V.containsError(error, validatedObj.errors));\n        });\n        it('do NOT add max error when less than max', () => {\n            const propName = 'age';\n            const propValidation = {\n                max: 3\n            };\n            const objToValidate = {\n                [propName]: 2\n            };\n            const validatedObj = V.validateNumber(propValidation, propName, objToValidate);\n            const error = { propName, errorMsg: V.allErrors.MAX_LENGTH };\n            assert.notOk(V.containsError(error, validatedObj.errors));\n        });\n        it('do NOT add max error when null and not required', () => {\n            const propName = 'age';\n            const propValidation = {\n                required: false,\n                max: 3\n            };\n            const objToValidate = {\n                [propName]: null\n            };\n            const validatedObj = V.validateNumber(propValidation, propName, objToValidate);\n            const error = { propName, errorMsg: V.allErrors.MAX_LENGTH };\n            assert.notOk(V.containsError(error, validatedObj.errors));\n        });\n    });\n    it('add default error when invalid number', () => {\n        const propName = 'age';\n        const propValidation = {\n            required: false\n        };\n        const objToValidate = { age: '10' };\n        const validatedObj = V.validateNumber(propValidation, propName, objToValidate);\n        const error = { propName, errorMsg: V.allErrors.INVALID_NUMBER_ERROR };\n        assert.ok(V.containsError(error, validatedObj.errors));\n    });\n    it('add custom error when invalid number', () => {\n        const propName = 'age';\n        const propValidation = {\n            required: false,\n            invalidNumberError: 'CUSTOM_INVALID_NUMBER_ERROR'\n        };\n        const objToValidate = { age: '10' };\n        const validatedObj = V.validateNumber(propValidation, propName, objToValidate);\n        const error = { propName, errorMsg: propValidation.invalidNumberError };\n        assert.ok(V.containsError(error, validatedObj.errors));\n    });\n    it('do NOT add error when valid number', () => {\n        const propName = 'age';\n        const propValidation = {\n            required: false\n        };\n        const objToValidate = { age: 25 };\n        const validatedObj = V.validateNumber(propValidation, propName, objToValidate);\n        const error = { propName, errorMsg: V.allErrors.INVALID_NUMBER_ERROR };\n        assert.notOk(V.containsError(error, validatedObj.errors));\n    });\n});\n//# sourceMappingURL=validateNumber.test.js.map"]}