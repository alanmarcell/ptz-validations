{"version":3,"sources":["../dist-esnext/required.test.js"],"names":["assert","V","describe","it","propName","error","errorMsg","allErrors","REQUIRED","objToValidate","validatedObj","required","ok","containsError","errors","requiredWithError","undefined","notOk"],"mappings":"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","file":"required.test.js","sourcesContent":["import * as assert from 'ptz-assert';\nimport * as V from './index';\ndescribe('required', () => {\n    describe('null', () => {\n        it('add default error msg when null', () => {\n            const propName = 'userName';\n            const error = { propName, errorMsg: V.allErrors.REQUIRED };\n            const objToValidate = {\n                [propName]: null\n            };\n            const validatedObj = V.required(propName, objToValidate);\n            assert.ok(V.containsError(error, validatedObj.errors));\n        });\n        it('add custom error msg when null', () => {\n            const propName = 'userName';\n            const errorMsg = 'CUSTOM_ERROR_MSG';\n            const error = { propName, errorMsg };\n            const objToValidate = {\n                [propName]: null\n            };\n            const validatedObj = V.requiredWithError(errorMsg, propName, objToValidate);\n            assert.ok(V.containsError(error, validatedObj.errors));\n        });\n    });\n    describe('undefined', () => {\n        it('add default error msg when undefined', () => {\n            const propName = 'userName';\n            const error = { propName, errorMsg: V.allErrors.REQUIRED };\n            const objToValidate = {\n                [propName]: undefined\n            };\n            const validatedObj = V.required(propName, objToValidate);\n            assert.ok(V.containsError(error, validatedObj.errors));\n        });\n        it('add custom error msg when undefined', () => {\n            const propName = 'userName';\n            const errorMsg = 'CUSTOM_ERROR_MSG';\n            const error = { propName, errorMsg };\n            const objToValidate = {\n                [propName]: undefined\n            };\n            const validatedObj = V.requiredWithError(errorMsg, propName, objToValidate);\n            assert.ok(V.containsError(error, validatedObj.errors));\n        });\n    });\n    describe('empty', () => {\n        it('add default error msg when null', () => {\n            const propName = 'userName';\n            const error = { propName, errorMsg: V.allErrors.REQUIRED };\n            const objToValidate = {\n                [propName]: ''\n            };\n            const validatedObj = V.required(propName, objToValidate);\n            assert.ok(V.containsError(error, validatedObj.errors));\n        });\n        it('add custom error msg when null', () => {\n            const propName = 'userName';\n            const errorMsg = 'CUSTOM_ERROR_MSG';\n            const error = { propName, errorMsg };\n            const objToValidate = {\n                [propName]: ''\n            };\n            const validatedObj = V.requiredWithError(errorMsg, propName, objToValidate);\n            assert.ok(V.containsError(error, validatedObj.errors));\n        });\n    });\n    it('do NOT add error when STRING not empty', () => {\n        const propName = 'userName';\n        const error = { propName, errorMsg: V.allErrors.REQUIRED };\n        const objToValidate = {\n            [propName]: 'angeloocana'\n        };\n        const validatedObj = V.required(propName, objToValidate);\n        assert.notOk(V.containsError(error, validatedObj.errors));\n    });\n});\n//# sourceMappingURL=required.test.js.map"]}